/* RequestCodes.h -- Defines Odyssey Message Request Codes
 *
 * Copyright (C) ConvergeNet Technologies, 1998,99
 *
 * This material is a confidential trade secret and proprietary 
 * information of ConvergeNet Technologies, Inc. which may not be 
 * reproduced, used, sold or transferred to any third party without the 
 * prior written consent of ConvergeNet Technologies, Inc.  This material 
 * is also copyrighted as an unpublished work under sections 104 and 408 
 * of Title 17 of the United States Code.  Law prohibits unauthorized 
 * use, copying or reproduction.
 *
**/

// Revision History:
//  8/28/98 Joe Altmaier: Create file
// ** Log at end-of-file **


#ifndef _RequestCodes_h
#define _RequestCodes_h

#include "BuildRequest.h"

#ifdef __cplusplus
extern "C" char *NameRq(REQUESTCODE rqCode);
#else
extern char *NameRq(REQUESTCODE rqCode);
#endif

// Define Request Range
// (Upper 16 bits of 32 bit request code)
//
DEFINE_REQUEST_RANGES

	REQUEST_RANGE(REQ_OS)
	REQUEST_RANGE(REQ_OS_DDM)
	REQUEST_RANGE(REQ_TS)
	REQUEST_RANGE(REQ_PHS)
	REQUEST_RANGE(REQ_SPIPC)
	REQUEST_RANGE(REQ_RTC)
	REQUEST_RANGE(REQ_RAID)
	REQUEST_RANGE(REQ_SCSI)
	REQUEST_RANGE(REQ_BSA)
	REQUEST_RANGE(REQ_CMB)
	REQUEST_RANGE(REQ_SCC)
	REQUEST_RANGE(REQ_NET)
	REQUEST_RANGE(REQ_SSAPI)
	REQUEST_RANGE(REQ_TEST_PTS)
	REQUEST_RANGE(REQ_EIS)
	REQUEST_RANGE(REQ_ELOG)		
	REQUEST_RANGE(REQ_DM)		
	REQUEST_RANGE(REQ_LM)	
	REQUEST_RANGE(REQ_CHAOSFILE)
	REQUEST_RANGE(REQ_OS_VIRTUALMANAGER)		
	REQUEST_RANGE(REQ_OS_SYSINFO)
	REQUEST_RANGE(REQ_OS_DEMO)
	REQUEST_RANGE(REQ_OS_STATUS)
	REQUEST_RANGE(REQ_QUIESCEMASTER)
	REQUEST_RANGE(REQ_PNP)
	REQUEST_RANGE(REQ_SDDM)
	REQUEST_RANGE(REQ_LEDDDM)
	REQUEST_RANGE(REQ_ALARMMASTER)	
	REQUEST_RANGE(REQ_ENVIRONMENT)	
	REQUEST_RANGE(REQ_EXCEPTIONMASTER)	
	REQUEST_RANGE(REQ_OS_DDMMANAGER)
	REQUEST_RANGE(REQ_OS_VIRTUALMASTER)
	REQUEST_RANGE(REQ_UPGRADEMASTER)
	REQUEST_RANGE(REQ_FILESYSTEMMASTER)
	REQUEST_RANGE(REQ_PROFILE)
	REQUEST_RANGE(REQ_BOOTMGR)
	REQUEST_RANGE(REQ_HBCFAILOVERMASTER)
	REQUEST_RANGE(REQ_PPP)
	REQUEST_RANGE(REQ_LEAK)
	REQUEST_RANGE(REQ_VCM)
	REQUEST_RANGE(REQ_TEST)
	
END_REQUEST_RANGES

//***
//*** CHAOS Request Codes
//***

// OS Request Codes
// (defines lower 16 bites of 32 bit request code)
//
DEFINE_REQUEST_CODES(REQ_OS)

	// OS Timer Ddm
	REQUEST_CODE(REQ_OS_TIMER_START)
	REQUEST_CODE(REQ_OS_TIMER_STOP)	
	REQUEST_CODE(REQ_OS_TIMER_RESET)

	// OS Stress Ddm
	REQUEST_CODE(REQ_OS_STRESS)		
	REQUEST_CODE(REQ_OS_STRESS_XFER) 	

	// OS Sgl Ddm
	REQUEST_CODE(REQ_OS_SGL_TEST)
	REQUEST_CODE(REQ_OS_SGL_XFER)

	// OS Transport Ddm
	REQUEST_CODE(REQ_OS_TRANSPORT_VDN_STOP)
	REQUEST_CODE(REQ_OS_TRANSPORT_IOP_STOP)
	REQUEST_CODE(REQ_OS_TRANSPORT_IOP_START)
	REQUEST_CODE(REQ_OS_TRANSPORT_HBC_MASTER)
	REQUEST_CODE(REQ_OS_TRANSPORT_TERMINATE)

	REQUEST_CODE(REQ_OS_TEST_PONG)

	REQUEST_CODE(REQ_OS_CPU_STATS)
	
END_REQUEST_CODES(REQ_OS)

// OS Ddm Base Class. Dispatched by all Ddms
//
DEFINE_REQUEST_CODES(REQ_OS_DDM)

	REQUEST_CODE(REQ_OS_DDM_INITIALIZE)
	REQUEST_CODE(REQ_OS_DDM_ENABLE)
	REQUEST_CODE(REQ_OS_DDM_QUIESCE)
	REQUEST_CODE(REQ_OS_DDM_PING)
	REQUEST_CODE(REQ_OS_DDM_HALT)
	REQUEST_CODE(REQ_OS_DDM_MODE)
	REQUEST_CODE(REQ_OS_DDM_TERMINATE)
	
END_REQUEST_CODES(REQ_OS_DDM)

// OS DdmManager
//
DEFINE_REQUEST_CODES(REQ_OS_DDMMANAGER)

	REQUEST_CODE(REQ_OS_DDMMAN_SYSTEMREADY)
	REQUEST_CODE(REQ_OS_DDMMAN_SETVDNMAP)
	REQUEST_CODE(REQ_OS_DDMMAN_LISTENVDNMAP)
	REQUEST_CODE(REQ_OS_DDMMAN_CREATEINSTANCE)
	REQUEST_CODE(REQ_OS_DDMMAN_DEFINEVIRTUALROUTE)
	REQUEST_CODE(REQ_OS_DDMMAN_DELETEVIRTUALROUTE)
	REQUEST_CODE(REQ_OS_DDMMAN_STARTDID)
	REQUEST_CODE(REQ_OS_DDMMAN_STARTVIRTUALS)
	REQUEST_CODE(REQ_OS_DDMMAN_PING)
	REQUEST_CODE(REQ_OS_DDMMAN_QUIESCEOS)
	REQUEST_CODE(REQ_OS_DDMMAN_DELETEINSTANCE)
	REQUEST_CODE(REQ_OS_DDMMAN_GETMASTERROUTES)
	REQUEST_CODE(REQ_OS_DDMMAN_UPDATEMASTERROUTES)
	
END_REQUEST_CODES(REQ_OS_DDMMANAGER)

// OS DdmVirtualMaster
//
DEFINE_REQUEST_CODES(REQ_OS_VIRTUALMASTER)

	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LISTENIOPSTATE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LISTENNEWDEVICE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LISTENNEWROUTE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LISTENCHANGEROUTE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LISTENDELETEROUTE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LISTENROUTESCOMPLETE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_SETNEWROUTE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_ROUTESCOMPLETE)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_ROUTEREADY)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_ROUTEDELETED)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_FAILSLOT)
	
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_GETCONFIG)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_LOADVD)
	REQUEST_CODE(REQ_OS_VIRTUALMASTER_DELETEVD)

END_REQUEST_CODES(REQ_OS_VIRTUALMASTER)

// OS DdmVirtualManager
//
DEFINE_REQUEST_CODES(REQ_OS_VIRTUALMANAGER)

	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_FINDVMS)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_GETCONFIG)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_SETIOPSTATE)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_LISTENIOPSTATE)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_LISTENVDN)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_FAILIOP)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_FINDPTS)
	REQUEST_CODE(REQ_OS_VIRTUALMANAGER_PING)
	
END_REQUEST_CODES(REQ_OS_VIRTUALMANAGER)

// OS Chaos Demos
//
DEFINE_REQUEST_CODES(REQ_OS_DEMO)

	REQUEST_CODE(REQ_OS_DEMO2PONG)
	REQUEST_CODE(REQ_OS_DEMO3_PONGTICK)
	
END_REQUEST_CODES(REQ_OS_DEMO)

// OS DdmSysInfo
//
DEFINE_REQUEST_CODES(REQ_OS_SYSINFO)

	REQUEST_CODE(REQ_OS_SYSINFO_GETCLASSTABLE)
	REQUEST_CODE(REQ_OS_SYSINFO_GETDIDACTIVITY)

END_REQUEST_CODES(REQ_OS_SYSINFO)

// OS DdmStatus
//
DEFINE_REQUEST_CODES(REQ_OS_STATUS)

	REQUEST_CODE(REQ_OS_STATUS_DUMPALLDIDACTIVITY)
	REQUEST_CODE(REQ_OS_STATUS_DUMPDIDACTIVITY)
	REQUEST_CODE(REQ_OS_STATUS_DUMPVDT)
	REQUEST_CODE(REQ_OS_STATUS_DUMPIST)
	
END_REQUEST_CODES(REQ_OS_STATUS)


//***
//*** Persistent Services Request Codes
//***

//  Persistent services
DEFINE_REQUEST_CODES(REQ_TS)
	REQUEST_CODE(TS_FUNCTION_DEFINE_TABLE)		
	REQUEST_CODE(TS_FUNCTION_GET_TABLE_DEF)		
	REQUEST_CODE(TS_FUNCTION_ENUMERATE_TABLE)	
	REQUEST_CODE(TS_FUNCTION_INSERT_ROW)		
	REQUEST_CODE(TS_FUNCTION_INSERT_VLROW)		
	REQUEST_CODE(TS_FUNCTION_MODIFY_ROW)		
	REQUEST_CODE(TS_FUNCTION_MODIFY_FIELD)		
	REQUEST_CODE(TS_FUNCTION_READ_ROW_MULTI)	
	REQUEST_CODE(TS_FUNCTION_READ_ROW)			
	REQUEST_CODE(TS_FUNCTION_READ_VARLEN_ROW)
	REQUEST_CODE(TS_FUNCTION_DELETE_ROW_MULTI)	
	REQUEST_CODE(TS_FUNCTION_DELETE_ROW)		
	REQUEST_CODE(TS_FUNCTION_LISTEN)			
	REQUEST_CODE(TS_FUNCTION_STOP_LISTENING)
	REQUEST_CODE(TS_FUNCTION_DELETE_TABLE)	
	REQUEST_CODE(TS_FUNCTION_TEST_SET_FIELD)	
	REQUEST_CODE(TS_FUNCTION_QUERY_SET_RID)	
	REQUEST_CODE(TS_FUNCTION_MODIFY_BITS)	
END_REQUEST_CODES(REQ_TS)

//  Performance Health Status Monitor and Reporter Messages
DEFINE_REQUEST_CODES(REQ_PHS)
	REQUEST_CODE(PHS_RESET_STATUS)
   	REQUEST_CODE(PHS_RETURN_STATUS)
    REQUEST_CODE(PHS_RESET_PERFORMANCE)
    REQUEST_CODE(PHS_RETURN_PERFORMANCE)
    REQUEST_CODE(PHS_RETURN_RESET_PERFORMANCE)
	REQUEST_CODE(PHS_START)
	REQUEST_CODE(PHS_PAUSE)
	REQUEST_CODE(PHS_RESET)
	REQUEST_CODE(PHS_CONTINUE)
	REQUEST_CODE(PHS_STOP)
END_REQUEST_CODES(REQ_PHS)

//  SerialPort IPC DDM
DEFINE_REQUEST_CODES(REQ_SPIPC)
	REQUEST_CODE(SPIPC_SERVICE_REQUEST)		
END_REQUEST_CODES(REQ_SPIPC)

//  RTC - specific
DEFINE_REQUEST_CODES(REQ_RTC)
	REQUEST_CODE(RTC_PRIVATE_FUNCTION)		
	REQUEST_CODE(RTCCA_SERVICE_REQUEST)	
	REQUEST_CODE(IO_EI_API_SET_SCENARIO)	
END_REQUEST_CODES(REQ_RTC)

//  RAID Message codes
DEFINE_REQUEST_CODES(REQ_RAID)
	REQUEST_CODE(RAID_DDM_COMMAND)			
	REQUEST_CODE(RMGMT_DDM_COMMAND)		    
	REQUEST_CODE(RSM_DDM_COMMAND)		    
END_REQUEST_CODES(REQ_RAID)

//  Scsi Message codes
DEFINE_REQUEST_CODES(REQ_SCSI)
	REQUEST_CODE(SCSI_DEVICE_RESET)         
	REQUEST_CODE(SCSI_SCB_ABORT)            
	REQUEST_CODE(SCSI_SCB_EXEC)            
END_REQUEST_CODES(REQ_SCSI)

// Bsa Message codes
DEFINE_REQUEST_CODES(REQ_BSA)
	REQUEST_CODE(BSA_BLOCK_READ)            
	REQUEST_CODE(BSA_BLOCK_REASSIGN)        
	REQUEST_CODE(BSA_BLOCK_WRITE)           
	REQUEST_CODE(BSA_BLOCK_WRITE_VERIFY)    
	REQUEST_CODE(BSA_CACHE_FLUSH)           
	REQUEST_CODE(BSA_DEVICE_RESET)          
	REQUEST_CODE(BSA_MEDIA_EJECT)           
	REQUEST_CODE(BSA_MEDIA_FORMAT)          
	REQUEST_CODE(BSA_MEDIA_LOCK)            
	REQUEST_CODE(BSA_MEDIA_MOUNT)           
	REQUEST_CODE(BSA_MEDIA_UNLOCK)          
	REQUEST_CODE(BSA_MEDIA_VERIFY)          
	REQUEST_CODE(BSA_POWER_MANAGEMENT)      
	REQUEST_CODE(BSA_STATUS_CHECK)          
	REQUEST_CODE(BSA_GET_LEGACY_DATA)          
END_REQUEST_CODES(REQ_BSA)

// CMB Message codes
DEFINE_REQUEST_CODES(REQ_CMB)
	REQUEST_CODE(CMB_UPDATE_IOP_STATUS)     /* (private) */
	REQUEST_CODE(CMB_IOP_CONTROL)
	REQUEST_CODE(CMB_EVC_CONTROL)
   REQUEST_CODE(CMB_EVC_POWER_CONTROL)
   REQUEST_CODE(CMB_DDH_CONTROL)
	REQUEST_CODE(CMB_POLL_ALL_IOPS)
   REQUEST_CODE(CMB_SEND_SMALL_MSG)
   REQUEST_CODE(CMB_SET_MIPS_STATE)
   REQUEST_CODE(CMB_POLL_ENVIRONMENT)
END_REQUEST_CODES(REQ_CMB)

// Serial Communications Channel(s)
DEFINE_REQUEST_CODES(REQ_SCC)
	REQUEST_CODE(REQ_SCC_PUTCHAR)			
	REQUEST_CODE(REQ_SCC_PUTS)				
	REQUEST_CODE(REQ_SCC_GETCHAR)			
	REQUEST_CODE(REQ_SCC_GETS)				
	REQUEST_CODE(REQ_SCC_CHECK)				
	REQUEST_CODE(REQ_SCC_FLUSH)				
	REQUEST_CODE(REQ_SCC_LAST)				
END_REQUEST_CODES(REQ_SCC)

// Network Requests
// changed from NWK to NET (RCB 7/12/99)
DEFINE_REQUEST_CODES(REQ_NET)
	REQUEST_CODE(REQ_NET_LISTEN)
	REQUEST_CODE(REQ_NET_READ)
	REQUEST_CODE(REQ_NET_WRITE)
	REQUEST_CODE(REQ_NET_KILL)
	REQUEST_CODE(REQ_NET_CONNECT)
	REQUEST_CODE(REQ_NET_CHANGEIP)
	REQUEST_CODE(REQ_NET_CHANGEGATEWAY)
END_REQUEST_CODES(REQ_NET)

//SSAPI Requests
DEFINE_REQUEST_CODES(REQ_SSAPI)
	REQUEST_CODE(REQ_SSAPI_REQ)
	REQUEST_CODE(REQ_SSAPI_RESPONSE)
END_REQUEST_CODES(REQ_SSAPI)

DEFINE_REQUEST_CODES(REQ_TEST_PTS)
	REQUEST_CODE(REQ_PTS_START_TEST)
END_REQUEST_CODES(REQ_TEST_PTS)

// Error Injection Service (EIS) Requests
DEFINE_REQUEST_CODES(REQ_EIS)
	REQUEST_CODE(PRIVATE_REQ_LOAD_TRIGGER_MGR)
	REQUEST_CODE(PRIVATE_REQ_ARM_TRIGGER_MGR)
	REQUEST_CODE(PRIVATE_REQ_DISARM_TRIGGER_MGR)
	REQUEST_CODE(PRIVATE_REQ_REPORT_TRIGGER_MGR)
END_REQUEST_CODES(REQ_EIS)

DEFINE_REQUEST_CODES(REQ_ELOG)
	REQUEST_CODE(PRIVATE_REQ_ADD_LOGENTRY)
	REQUEST_CODE(REQ_QUERY_LOG_METADATA)
	REQUEST_CODE(REQ_QUERY_LOG)
	REQUEST_CODE(REQ_CANCEL_LOG_LISTEN)
END_REQUEST_CODES(REQ_ELOG)

// Drive Monitor request codes
DEFINE_REQUEST_CODES(REQ_DM)
	REQUEST_CODE(DM_SCAN)
	REQUEST_CODE(DM_SCAN_SINGLE)
	REQUEST_CODE(DM_START)
	REQUEST_CODE(DM_STOP)
	REQUEST_CODE(DM_STOP_ALL)
	REQUEST_CODE(DM_READ_VERIFY)	// for test only
	REQUEST_CODE(DM_WRITE_VERIFY)	// test
	REQUEST_CODE(DM_READ_TEST)		// test
END_REQUEST_CODES(REQ_DM)

// Loop Monitor request codes
DEFINE_REQUEST_CODES(REQ_LM)
	REQUEST_CODE(LM_ENABLE_ID)
	REQUEST_CODE(LM_DISABLE_ID)
	REQUEST_CODE(LM_SCAN)
	REQUEST_CODE(LM_LOOP_QUIESCE)
	REQUEST_CODE(LM_LOOP_UP)
	REQUEST_CODE(LM_LOOP_DOWN)
	REQUEST_CODE(LM_LOOP_LIP)
	REQUEST_CODE(LM_LOOP_LIP_RESET)
END_REQUEST_CODES(REQ_LM)


DEFINE_REQUEST_CODES(REQ_CHAOSFILE)
	REQUEST_CODE(REQ_CHAOSFILE_CREATE)
	REQUEST_CODE(REQ_CHAOSFILE_RENAME)
	REQUEST_CODE(REQ_CHAOSFILE_RESIZE_MAX)
	REQUEST_CODE(REQ_CHAOSFILE_SET_SIZE)
	REQUEST_CODE(REQ_CHAOSFILE_DELETE)
	REQUEST_CODE(REQ_CHAOSFILE_OPEN)
	REQUEST_CODE(REQ_CHAOSFILE_CLOSE)
	REQUEST_CODE(REQ_CHAOSFILE_READ)
	REQUEST_CODE(REQ_CHAOSFILE_WRITE)
END_REQUEST_CODES(REQ_CHAOSFILE)

DEFINE_REQUEST_CODES(REQ_QUIESCEMASTER)
	REQUEST_CODE(REQ_QUIESCE_VCIRCUIT)
	REQUEST_CODE(REQ_QUIESCE_IOP)
	REQUEST_CODE(REQ_QUIESCE_BUS)
	REQUEST_CODE(REQ_QUIESCE_ROUTED_IOPLOCAL)
END_REQUEST_CODES(REQ_QUIESCEMASTER)

// Peek and Poke
DEFINE_REQUEST_CODES(REQ_PNP)
	REQUEST_CODE(PNP_CREATE_TABLE)			
	REQUEST_CODE(PNP_GET_TABLE_DEF)				
	REQUEST_CODE(PNP_ENUM_TABLE)			
	REQUEST_CODE(PNP_INSERT_ROW)	
	REQUEST_CODE(PNP_MODIFY_ROW)			
	REQUEST_CODE(PNP_READ_ROW)			
	REQUEST_CODE(PNP_DELETE_ROW)			
	REQUEST_CODE(PNP_DELETE_TABLE)				
	REQUEST_CODE(PNP_MODIFY_FIELD)				
	REQUEST_CODE(PNP_LISTEN)				
	REQUEST_CODE(PNP_CONNECT)				
END_REQUEST_CODES(REQ_PNP)

DEFINE_REQUEST_CODES(REQ_SDDM)
	REQUEST_CODE(SDDM_REPLY)
END_REQUEST_CODES(REQ_SDDM)

DEFINE_REQUEST_CODES(REQ_ALARMMASTER)
	REQUEST_CODE(REQ_ALARM_SUBMIT)
	REQUEST_CODE(REQ_ALARM_REMIT)
	REQUEST_CODE(REQ_ALARM_RECOVER)
	REQUEST_CODE(REQ_ALARM_QUERY)
END_REQUEST_CODES(REQ_ALARMMASTER)

DEFINE_REQUEST_CODES(REQ_ENVIRONMENT)
	REQUEST_CODE(ENV_POLL_DATA)
	REQUEST_CODE(ENV_ACTIVATE)
	REQUEST_CODE(ENV_DEACTIVATE)
	REQUEST_CODE(ENV_KEYSWITCH_CHANGE_STATE)
	REQUEST_CODE(ENV_POWER_EVNT)
	REQUEST_CODE(ENV_RUN_DIAGNOSTIC)
END_REQUEST_CODES(REQ_ENVIRONMENT)

DEFINE_REQUEST_CODES(REQ_EXCEPTIONMASTER)
	REQUEST_CODE(XM_NORMAL)
	REQUEST_CODE(XM_WARNING)
	REQUEST_CODE(XM_ALARM)
END_REQUEST_CODES(REQ_EXCEPTIONMASTER)

DEFINE_REQUEST_CODES(REQ_LEDDDM)
	REQUEST_CODE(LED_TURN_RED)
	REQUEST_CODE(LED_TURN_GREEN)
	REQUEST_CODE(LED_TURN_AMBER)
	REQUEST_CODE(LED_TOGGLE)
	REQUEST_CODE(LED_OFF)
END_REQUEST_CODES(REQ_LEDDDM)

DEFINE_REQUEST_CODES(REQ_UPGRADEMASTER)
	REQUEST_CODE(REQ_UPGRADE_ADD_IMAGE)
	REQUEST_CODE(REQ_UPGRADE_QUERY_IMAGES)
	REQUEST_CODE(REQ_UPGRADE_OPEN_IMAGE)
	REQUEST_CODE(REQ_UPGRADE_ASSOCIATE_IMAGE)	
	REQUEST_CODE(REQ_UPGRADE_MAKE_PRIMARY)
	REQUEST_CODE(REQ_UPGRADE_MODIFY_DEFAULT_IMAGE)
END_REQUEST_CODES(REQ_UPGRADEMASTER)

DEFINE_REQUEST_CODES(REQ_FILESYSTEMMASTER)
	REQUEST_CODE(REQ_FILESYS_ADD_FILE)
	REQUEST_CODE(REQ_FILESYS_DELETE_FILE)
	REQUEST_CODE(REQ_FILESYS_LIST_FILES)
	REQUEST_CODE(REQ_FILESYS_OPEN_FILE)
	REQUEST_CODE(REQ_FILESYS_GET_SYSINFO)
END_REQUEST_CODES(REQ_FILESYSTEMMASTER)

DEFINE_REQUEST_CODES(REQ_PROFILE)
	REQUEST_CODE(REQ_PROFILE_START)
	REQUEST_CODE(REQ_PROFILE_STOP)
	REQUEST_CODE(REQ_PROFILE_CLEAR)
	REQUEST_CODE(REQ_PROFILE_DELIVER)
END_REQUEST_CODES(REQ_PROFILE)

DEFINE_REQUEST_CODES(REQ_BOOTMGR)
	REQUEST_CODE(REQ_IOP_OUT_OF_SERVICE)
	REQUEST_CODE(REQ_IOP_OUT_OF_SERVICE_INT)
	REQUEST_CODE(REQ_IOP_INTO_SERVICE)
	REQUEST_CODE(REQ_IOP_INTO_SERVICE_INT)
	REQUEST_CODE(REQ_IOP_POWER_ON)
	REQUEST_CODE(REQ_IOP_LOCK_UNLOCK_INT)
END_REQUEST_CODES(REQ_BOOTMGR)

DEFINE_REQUEST_CODES(REQ_HBCFAILOVERMASTER)
	REQUEST_CODE(HBCFAILOVER_HEARTBEAT)
	REQUEST_CODE(HBCFAILOVER_RESUME)
	REQUEST_CODE(HBCMASTER_SWITCH)
END_REQUEST_CODES(REQ_HBCFAILOVERMASTER)

DEFINE_REQUEST_CODES(REQ_PPP)
	REQUEST_CODE(REQ_PPP_BEGIN)
	REQUEST_CODE(REQ_PPP_HANGUP)	
	REQUEST_CODE(REQ_PPP_HUNGUP)		
END_REQUEST_CODES(REQ_PPP)

DEFINE_REQUEST_CODES(REQ_LEAK)
	REQUEST_CODE(REQ_LEAK_CLEAR)
	REQUEST_CODE(REQ_LEAK_DELIVER)
END_REQUEST_CODES(REQ_LEAK)

DEFINE_REQUEST_CODES(REQ_VCM)
	REQUEST_CODE(REQ_MODIFY_VC)
END_REQUEST_CODES(REQ_VCM)

DEFINE_REQUEST_CODES(REQ_TEST)
	REQUEST_CODE(REQ_TEST_REGISTER)
	REQUEST_CODE(REQ_TEST_RUN)
END_REQUEST_CODES(REQ_TEST)

#endif	// _RequestCodes

//
// $Log: /Gemini/Include/Oos/RequestCodes.h $
// 
// 105   2/14/00 4:58p Tnelson
// Added Chaos Demo Requests
// 
// 104   2/12/00 8:27p Tnelson
// 
// 103   2/12/00 8:18p Tnelson
// Changed PtsLoader requests to Chaos Demo requests.
// 
// 102   2/08/00 10:05p Rbraun
// Added REQ_TEST for Neptune Test Management System
// 
// 101   2/03/00 10:32a Tnelson
// Added Ddm Mode/Terminate
// 
// 100   2/01/00 6:35a Tnelson
// Added DdmManager codes
// 
// 99    1/27/00 4:47p Jaltmaier
// Profiling.
// 
// 98    1/26/00 2:30p Joehler
// Add UpgradeMaster Associate Image and Make Primary and Boot Manager
// Power On and Lock/Unlock requestcodes. 
// 
// 97    1/24/00 11:04a Jlane
// VD Delete support changes.  Checked in by JFL for TN.
// 
// 96    1/20/00 4:01p Eric_wedel
// Added new request code CMB_EVC_POWER_CONTROL.
// 
// 95    12/17/99 5:26p Dpatel
// added vc modify request codes
// 
// 94    12/16/99 7:16p Iowa
// Properly merged.
// 
// 93    12/16/99 3:26p Iowa
// System info support.
// 
// 91    12/09/99 4:08p Joehler
// Changes for CtTtyUtil
// 
// 90    12/09/99 1:39a Iowa
// 
// 89    11/22/99 5:33p Jlane
// Add more BootMgr Request codes.
// 
// 88    11/17/99 4:37p Hdo
// Add REQ_EXCEPTIONMASTER back for EVCStatusReporter
// 
// 87    11/17/99 2:20p Hdo
// Add ENV_POLL_DATA, ENV_ACTIVATE, and ENV_KEYSWITCH_CHANGE_STATE
// 
// 86    11/11/99 6:40p Ewedel
// Added CMB_DDH_CONTROL.
// 
// 85    11/05/99 6:33p Ewedel
// Added  CMB_POLL_ENVIRONMENT.
// 
// 84    11/04/99 1:18p Jlane
// Roll in Tom's changes.
// 
// 83    11/03/99 8:34p Bbutler
// Add REQ_QUIESCE_ROUTED_IOPLOCAL
// 
// 82    10/27/99 11:09a Joehler
// Added BootMgr REQ_IOP_OUT_OF_SERVICE for Upgrade Master
// 
// 81    10/21/99 7:28p Iowa
// RqOsTransportIopStart
// 
// 78    10/05/99 11:12a Joehler
// Added Open Image request code for Upgrade Master
// 
// 77    10/04/99 8:02p Ewedel
// Added new request code CMB_SET_MIPS_STATE.
// 
// 76    9/30/99 10:10a Sgavarre
// add var len requests
// 
// 73    9/16/99 3:13p Tnelson
// Support PTS
// 
// 72    9/10/99 10:19a Joehler
// added upgrade mater request codes
//
// // 71    9/01/99 7:26p Iowa
// Cached code/data works!
// Static Send for non-ddm.
// 
// 70    8/30/99 3:51p Tnelson
// Add VirtualMaster Request code
// 
// 69    8/29/99 3:45p Tnelson
// Added VirtualMaster RequestCodes
// 
// 68    8/27/99 5:25p Joehler
// added Alarm Query request for SSAPI
// 
// 67    8/24/99 8:22p Ewedel
// Cleaned up header, again.
// 
// 66    8/24/99 8:17p Ewedel
// Removed old request code CMB_UPDATE_EVC_STATUS.
// 
// 65    8/24/99 8:22p Jaltmaier
// All changes for cache/dma consistency, transport redesign, Send error
// recovery, HBC master routing and new CallbackTarget model of dma.
// 
// 64    8/23/99 8:26p Tnelson
// 
// 63    8/23/99 6:52p Tnelson
// Added:  extern char *NameRq(REQUESTCODE rqCode);
// 
// 62    8/20/99 6:18p Hdo
// DdmLED
// 
// 61    8/17/99 8:17p Tnelson
// Added VirtualMaster RQs
// Moved $Log to end of file
// 
// 60    8/14/99 2:35p Hdo
// Exception Master
// 
// 59    8/13/99 4:00p Sgavarre
// add ModifyBits request code
// 
// 58    8/11/99 7:37p Ewedel
// Removed obsolete CMB_RETURN_*_STATUS messages, and added new
// CMB_SEND_SMALL_MSG.
// 
// 57    8/10/99 12:27p Vnguyen
// Add PHS Request Codes for START, STOP, PAUSE, RESET, CONTINUE, etc.
// 
// 56    7/22/99 2:50p Sgavarre
// Delete ExpandTable; add PTS request code TestSetField and QuerySetRID.
// 
// 55    7/21/99 4:56p Bbutler
// 
// 54    7/12/99 7:31p Rbraun
// Forgot to change request code range on NWK->NET conversion
// 
// 53    7/12/99 7:23p Rbraun
// Changed network request codes from NWK to NET
// 
// 52    7/08/99 6:29p Tnelson
// Fixup merge mess
// 
// 51    7/08/99 6:09p Tnelson
// 
// 48    7/08/99 4:28p Bbutler
// Attempt to fix Source Safe's bungled merge
// 
// 47    7/08/99 4:22p Bbutler
// 
// 46    7/08/99 11:20a Tnelson
// Support for failover
// 
// 
// 34    6/25/99 3:44p Tnelson
// Add REQ_OS_DDMMAN_STARTDID
// 
// 33    6/24/99 5:15p Bbutler
// Added  QuiesceMaster request codes
// 
// 32    6/24/99 11:49a Hdo
// 
// 31    6/22/99 8:55p Tnelson
// 
// 30    6/22/99 8:54p Tnelson
// 
// 29    6/22/99 8:15p Tnelson
// Added DdmPtsProxy Request codes
// 
// 28    6/17/99 4:19p Bbutler
// 
// 27    5/28/99 6:46p Mpanas
// Add DriveMonitor and LoopMonitor req codes
// 
// 26    5/24/99 6:58p Bbutler
// 
// 25    5/20/99 2:09p Jhatwich
// added SSAPI request
// 
// 24    4/29/99 9:36a Jaltmaier
// Add REQ_OS_SGL
// 
// 23    4/05/99 10:55a Bbutler
// Added ranges for Error Logging and Error Injection 
// 
// 22    4/01/99 1:01p Jhatwich
// 
// 21    4/01/99 12:43p Jhatwich
// 
// 20    3/30/99 8:28a Jhatwich
// added request codes for SSAPI and Network ddms
// 
// 19    3/29/99 12:40p Tnelson
// Support to deferred messages/fault-in Ddms
// 
// 18    3/15/99 9:38a Agusev
// Changed one of the RTC's requests
// 
// 17    3/12/99 5:11p Agusev
// Added a request macro for IsmIOErrorInjector DDM
// 
// 16    3/12/99 12:05p Rparks
// Added RSM_DDM_COMMAND
// 
// 15    3/12/99 12:22a Tnelson
// 
// 14    3/11/99 10:46p Tnelson
// New RequestCode Macros
// New Dispatch Tables
// 
// 12    3/04/99 7:37p Tnelson
// 
// 11    3/04/99 6:26p Tnelson
// Because SourceSafe is stupid!
// 
// 8     3/04/99 5:00p Tnelson
// Add Scc Request Codes
// 
// 7     3/03/99 7:11p Ewedel
// Added new request codes CMB_UPDATE_EVC_STATUS and
// CMB_UPDATE_IOP_STATUS.  Also added Dollar Log: /Gemini/Include/Oos/RequestCodes.h $ keyword.
// 
// 03/02/99 JL&EW: Added new request codes for CMB Ddm 
// 02/18/99 JFL	Added OOS_RETURN_CLASS_ENTRIES.
//  2/08/99 Mike Panas: Add Scsi and Bsa request codes.
//  2/08/99 Tom Nelson: Moved OOS codes into previous I2O code space.\
// 12/21/98 Tom Nelson: Merge I2O messages with private messages.
// 11/16/98	JFL	Added PHS_RESET_STATUS and PHS_RESET_PERFORMANCE and
//				PHS_RETURN_STATUS and PHS_RETURN_PERFORMANCE bumped 
//				XFunctionCodeMax from 33 to 37.
// 11/13/98	JFL	Added OOS_TIMER_RESET.
// 10/06/98 Jerry Lane: Added range 32-63 for the PHS Monitor and Reprter.
//  9/08/98 Joe Altmaier: add XFunctionCodeMax
//  8/28/98 Joe Altmaier: Create file
 
